name: DockerHubDemo

on:
  workflow_dispatch:
    
  
jobs:

  linter_code:
    name: run linter on project code
    runs-on: ubuntu-latest
    permissions:
       contents: read
       packages: read
       statuses: write
      
    steps:
      - name: Checkout code for linting
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Run super linter on checked out code
        uses: super-linter/super-linter/slim@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: ${{ github.head_ref || github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: pull code and run tests for service
    runs-on: ubuntu-latest
    needs: [linter_code]
    
    steps:

      - name: Checkout source code
        uses: actions/checkout@v4.1.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0

      - name: install node dependencies for testing
        run: npm install

      - name: run node tests to audit codebase
        run: npm test

  build_docker_image:
    name: build docker image for image repository
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout
        uses: actions/checkout@v4.1.1
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        
      - name: install runtime dependencies only
        run: npm i --omit=dev
        
      - name: Gather Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_HUB_ACCOUNT_ID }}/external
          tags: type=sha

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_ACCOUNT_ID }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: build the push to docker hub
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true       
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}










